{"version":3,"file":"static/js/795.408c84c2.chunk.js","mappings":"4MACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAhB,SAA+BF,EAAMG,UAC7C,E,SCHD,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BC4DnI,EAtDkB,SAACH,GACjB,OAAoCI,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAuBrB,OACE,UAAC,EAAAE,SAAD,YACE,SAAC,KAAD,CAAQC,KAAMN,EAAYO,QAAS,SAACC,GAAD,MAAc,qEAAd,KACnC,SAAC,EAAD,WACE,kBAAMC,QATe,WACzBR,GAAc,EAEf,EAMwCL,UAAWC,EAAca,SAzBlE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAIzCpB,EAAMsB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GACjD,EAgBK,UACGrB,EAAMyB,YACL,gBAAKxB,UAAWC,EAAhB,UACE,SAACwB,EAAA,EAAD,OAIJ,iBAAKzB,UAAWC,EAAhB,WACE,kBAAOyB,QAAQ,SAAf,qBACA,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKvB,QAEtC,iBAAKN,UAAWC,EAAhB,WACE,kBAAOyB,QAAQ,OAAf,mBACA,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKrB,QAEpC,gBAAKR,UAAWC,EAAhB,UACE,mBAAQ8B,QA7BY,WAC5B1B,GAAc,EACf,EA2BiDL,UAAU,MAAlD,gCAMX,E,kBCxBD,EA5BiB,WAEb,OAA8BgC,EAAAA,EAAAA,GAAQC,EAAAA,IAA/BC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OAEdC,GAAUC,EAAAA,EAAAA,OAGhBC,EAAAA,EAAAA,YAAU,WACQ,cAAXH,GACCC,EAAQG,KAAK,WAEpB,GAAE,CAACJ,EAAQC,IAQZ,OACI,0BACI,SAAC,EAAD,CAAWZ,UAAqB,YAAVW,EAAqBd,WAR3B,SAAAmB,GACpBN,EAAYM,GAEZJ,EAAQG,KAAK,UAChB,KASJ,C","sources":["webpack://react-complete-guide/./src/components/ui/Card.module.css?49cd","components/ui/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__rzlP+\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__QVu-z\",\"loading\":\"QuoteForm_loading__WnCi7\",\"control\":\"QuoteForm_control__La+U2\",\"actions\":\"QuoteForm_actions__8bdWE\"};","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../ui/Card';\nimport LoadingSpinner from '../ui/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  \n  const finishEnteringHandler = () => { //User has comeplted form, and must add quote and leave\n    setIsEntering(false); //user left form\n  }\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);  //the user has entered the form\n\n  }\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location) => 'Are you sure you want to leave? All your entered data will be lost!'} />\n      <Card>\n        <form onFocus={formFocusedHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http';\r\nimport {addQuote} from '../lib/api';\r\n\r\n\r\nconst NewQuote = () => {\r\n    \r\n    const {sendRequest, status} = useHttp(addQuote); //using a fnction pre-made, gives back object\r\n\r\n    const history = useHistory(); \r\n    //use history hook\r\n\r\n    useEffect(() => {\r\n        if(status === 'completed'){\r\n            history.push('./quotes');\r\n        }\r\n    }, [status, history]);\r\n\r\n    const addQuoteHandler = quoteData  => {\r\n        sendRequest(quoteData);\r\n\r\n        history.push('/quotes');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <QuoteForm isLoading={status ==='pending'} onAddQuote={addQuoteHandler}/>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default NewQuote;"],"names":["props","className","classes","children","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","Fragment","when","message","location","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"sourceRoot":""}